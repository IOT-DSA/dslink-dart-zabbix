library dslink.zabbix.nodes.zabbix_alert;

import 'common.dart';

//* @Node
//* @MetaType ZabbixAlert
//* @Is zabbixAlertNode
//* @Parent Alerts
//*
//* Information regarding certain action operations executed on an event.
//*
//* ZabbixAlert contains details about which operations took place after an
//* event was triggered. The path is the alertId. Alerts are generated by the
//* remote Zabbix server and values cannot be modified.
class ZabbixAlert extends ZabbixChild {
  static const isType = 'zabbixAlertNode';

  static const _alertStatus = const {
    '0' : const {
      'type' : 'message',
      'status' : const {
        '0' : 'message not sent',
        '1' : 'message sent',
        '2' : 'failed after a number of retries'
      }
    },
    '1' : const {
      'type' : 'remote command',
      'status' : const {
        '1' : 'command run',
        '2' : 'Tried but Zabbix agent unavailable.'
      }
    }
  };

  static Map<String, dynamic> definition(Map alert) {
    var alertType = _alertStatus[alert['alerttype']]['type'];
    var status = _alertStatus[alert['alerttype']]['status'][alert['status']];

    return {
      r'$is' : isType,
      //* @Node actionid
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Id of the action that generated the alert.
      //* @Value string
      'actionid' : ZabbixValue.definition('Action ID', 'string',
          alert['actionid'], false),
      //* @Node alerttype
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Type of alert. Values are message or remote command.
      //* @Value string
      'alerttype' : ZabbixValue.definition('Alert Type', 'string', alertType, false),
      //* @Node clock
      //* @MetaType alertClock
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Timestamp of when the alert was generated
      //* @Value string
      'clock' : ZabbixValue.definition('Clock', 'string', alert['clock'], false),
      //* @Node error
      //* @MetaType alertError
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Error text if there are issues sending a message or running a command.
      //* @Value string
      'error' : ZabbixValue.definition('Error', 'string', alert['error'], false),
      //* @Node esc_step
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Escalation step during which the alert was generated.
      //* @Value number
      'esc_step' : ZabbixValue.definition('Escalation Step', 'number',
          int.parse(alert['esc_step']), false),
      //* @Node eventid
      //* @MetaType alertEventId
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Id of the event that triggered the action.
      //* @Value string
      'eventid' : ZabbixValue.definition('Event ID', 'string', alert['eventid'], false),
      //* @Node mediatypeid
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Id of the media type used to send the message.
      //* @Value string
      'mediatypeid' : ZabbixValue.definition('Media Type id', 'string',
          alert['mediatypeid'], false),
      //* @Node message
      //* @MetaType alertMessage
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Message text used in message alerts.
      //* @Value string
      'message' : ZabbixValue.definition('Message', 'string', alert['message'], false),
      //* @Node retries
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Number of times remote Zabbix server tried to send the message.
      //* @Value number
      'retries' : ZabbixValue.definition('Retries', 'number',
          int.parse(alert['retries']), false),
      //* @Node sendto
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Address, username, or identifier of the recipient for message alerts.
      //* @Value string
      'sendto' : ZabbixValue.definition('Recipient', 'string', alert['sendto'], false),
      //* @Node status
      //* @MetaType alertStatus
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Status of the action operation.
      //*
      //* Status is a string representation of the status of the action
      //* operation. This will vary depending on the alert type.
      //*
      //* @Value string
      'status' : ZabbixValue.definition('Status', 'string', status, false),
      //* @Node subject
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Message subject used for message alerts.
      //* @Value string
      'subject' : ZabbixValue.definition('Subject', 'string', alert['subject'], false),
      //* @Node userid
      //* @MetaType alertUserid
      //* @Is zabbixValueNode
      //* @Parent ZabbixAlert
      //*
      //* Id of the user the message was sent to.
      //* @Value string
      'userid' : ZabbixValue.definition('User Id', 'string', alert['userid'], false)
    };
  }

  ZabbixAlert(String path) : super(path);

  bool updateChild(String path, String valueName, newValue, oldValue) => true;

  void onSubscribe({String valueName: '_rootVal'}) {
    // Don't implement subscribe since values don't update.
  }

  void onUnsubscribe({String valueName: '_rootVal'}) {
    // Don't implement unsubscribe since we can't subscribe.
  }

  void update(Map updatedValues) {
    // Alerts don't update
  }
}
